/*
Вариант 1.
Реализовать класс «Время».

Поля: часы, минуты, секунды.
Конструкторы: конструктор для инициализации полей.

При необходимости добавить свои функции. При недопустимых
параметрах объекта создается исключение. Для исключения
создать класс, производный от out_of_range. Дополнительно
созданный класс для исключения кроме наследуемых полей
(необходимо их также использовать) содержит поля класса
«Время» для недопустимого объекта и метод для печати всех
данных. Продемонстрировать работу с объектами в случае
возникновения исключения и его обработки и без возникновения
исключения.
*/

#include "../timeexception/OutOfRangeException.cpp"
#include "../timeexception/TimeException.cpp"

int main() {
  try {
    Time validTime(12, 30, 45);
    validTime.printTime();

    Time invalidTime(25, 70, 80); // Это приведет к возникновению исключения
  } catch (OutOfRangeException &e) {
    std::cout << "Exception caught: " << e.what() << std::endl;
    e.printDetails();
  }

  return 0;
}
